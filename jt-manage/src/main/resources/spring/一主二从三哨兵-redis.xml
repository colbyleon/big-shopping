<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">


    <!--每次都创建jedis对象性能较低 创建jedis线程池  -->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!--定义连接总数  -->
        <property name="maxTotal" value="${redis.maxTotal}"/>
        <!--定义最大闲置资源  -->
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <!--定义是否自动连接  -->
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
    </bean>

    <bean id="sentinelConfiguration" class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
        <property name="master">
            <bean class="org.springframework.data.redis.connection.RedisNode">
                <property name="name" value="${redis.sentinel.masterName}"></property>
            </bean>
        </property>
        <property name="sentinels">
            <set>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${redis.sentinel.host1}"/>
                    <constructor-arg name="port" value="${redis.sentinel.port1}" type="int"/>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${redis.sentinel.host2}"/>
                    <constructor-arg name="port" value="${redis.sentinel.port2}" type="int"/>
                </bean>
                <bean class="org.springframework.data.redis.connection.RedisNode">
                    <constructor-arg name="host" value="${redis.sentinel.host3}"/>
                    <constructor-arg name="port" value="${redis.sentinel.port3}" type="int"/>
                </bean>
            </set>
        </property>
    </bean>

    <bean id="connectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <constructor-arg name="sentinelConfig" ref="sentinelConfiguration"></constructor-arg>
        <constructor-arg name="poolConfig" ref="poolConfig"></constructor-arg>
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="connectionFactory" />
    </bean>


    <!-- 简单配置哨兵
    <bean id="jedisSentinelPool" class="redis.clients.jedis.JedisSentinelPool">
        &lt;!&ndash; 在没有导入原码的情况下，class文件中构造器的形参为xxx(String arg0,String arg1)
             并没有具体形参名，如果用name="xxx"构造注入会报错&ndash;&gt;
        <constructor-arg index="0" type="java.lang.String" value="${redis.sentinel.master}"/>
        <constructor-arg index="1">
            <set>
                <value>${redis.sentinel.a}</value>
                <value>${redis.sentinel.b}</value>
                <value>${redis.sentinel.c}</value>
            </set>
        </constructor-arg>
    </bean>-->
</beans>